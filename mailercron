#!/usr/bin/env php
<?php
use ntentan\Ntentan;
require __DIR__ . '/vendor/PHPMailer/PHPMailerAutoload.php';

// @todo Allow the timezone to be set during installation
date_default_timezone_set('Africa/Accra');

// Tell PHP to stop barking
error_reporting(E_ALL ^ E_NOTICE);

// Ensure that only a single instance of the cron runs at any time
$lockFile = sys_get_temp_dir() . "/kakalika-cron.lock";
if(file_exists($lockFile)){
    fputs(STDERR, "Lock file $lockFile found. Exiting ...\n");
    die();
}
touch($lockFile);

// Load configurations
$ntentan = parse_ini_file(__DIR__ . '/config/ntentan.ini', true);
$ntentan['home'] = __DIR__ . "/ntentan";
$app = parse_ini_file(__DIR__ . "/config/app.ini", true);
$app['home'] = __DIR__;

require "{$ntentan['home']}/lib/Ntentan.php";

Ntentan::$configPath = __DIR__ . "/config/";
Ntentan::setup($ntentan, $app);
\ntentan\views\template_engines\TemplateEngine::prependPath(__DIR__ . '/views/emails');
$emailSettings = \kakalika\modules\projects\email_settings\EmailSettings::getAll();

foreach($emailSettings->toArray() as $settings)
{
    if($settings['project']['email_integration'] != '1'){
        echo "Skipping emails for {$settings['project']['name']}\n";
        continue;
    }
    
    // Check for incoming mails
    echo "Processing emails for {$settings['project']['name']}\n";
    echo "Connecting to {$settings['incoming_server_type']}://{$settings['incoming_server_host']}:{$settings['incoming_server_port']} ... ";
    
    $emailConnection = new \kakalika\lib\EmailConnection();
    $emailConnection->setHost($settings['incoming_server_host']);
    $emailConnection->setPort($settings['incoming_server_port']);
    $emailConnection->setType($settings['incoming_server_type']);
    $emailConnection->setUsername($settings['incoming_server_username']);
    $emailConnection->setPassword($settings['incoming_server_password']);
    $emailConnection->setSsl($settings['incoming_server_ssl']);
    $emailConnection->open();
    echo "OK\n";
    
    while($emailConnection->hasMessage())
    {
        $emailMessage = $emailConnection->getNextMessage();
        echo "Processing [{$emailMessage->getSubject()}] from ({$emailMessage->getFromAddress()})\n";
        $user = \kakalika\modules\users\Users::getJustFirstWithEmail($emailMessage->getFromAddress());   

        if($user->count() == 0)
        {
            $user = \kakalika\modules\users\Users::getNew();
            $user->firstname = $emailMessage->getSenderName();
            $user->email = $emailMessage->getFromAddress();
            $user->username = $emailMessage->getFromAddress();
            $user->password = uniqid();
            $id = $user->save();
            $user->id = $id;

        }

        $_SESSION['user'] = $user->toArray();
        $to = $emailMessage->getToAddress();
        $commented = false;

        if(preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*(\+){1}(?<issue_number>[_a-z0-9-]+)/i", $to, $matches))
        {
            $commented = comment_on_issue($matches['issue_number'], $user, $emailMessage);
        }
        else if(preg_match("/^Re: (?<subject>.*) \[\#(?<issue_number>[_a-z0-9]+)\]/i", $emailMessage->getSubject(), $matches))
        {
            $commented = comment_on_issue($matches['issue_number'], $user, $emailMessage);
        }

        if(!$commented)
        {
            $issue = kakalika\modules\issues\Issues::getNew();
            $issue->title = $emailMessage->getSubject();
            $issue->opener = $user->id;
            $issue->created = $emailMessage->getTimestamp();
            $issue->description = $emailMessage->getPlainText();
            $issue->project_id = $settings['project']['id'];
            foreach($emailMessage->getAttachments() as $attachment)
            {
                $issue->addAttachment($attachment);
            }
            $issue->save();
        }
    }    
    
    // Send outgoing mails
    $outgoingMails = \kakalika\modules\outgoing_mails\OutgoingMails::getJustAllWithProjectId($settings['project']['id']);
    foreach($outgoingMails as $outgoingMail)
    {
        $sender = unserialize($outgoingMail->object);
        $sender->send($settings);
        $outgoingMail->delete();
    }    
}

unlink($lockFile);

function comment_on_issue($issueNumber, $user, $emailMessage)
{
    $issue = kakalika\modules\issues\Issues::getJustFirstWithNumber($issueNumber);
    
    if($issue->count() > 0)
    {
        $issue->updater = $user->id;
        $issue->comment = $emailMessage->getPlainText();
        foreach($emailMessage->getAttachments() as $attachment)
        {
            $issue->addAttachment($attachment);
        }
        $issue->update();
        return true;
    }
    else
    {
        return false;
    }
}

